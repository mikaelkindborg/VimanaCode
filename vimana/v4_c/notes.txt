
xcrun --show-sdk-path

cc -E file.c

man cc | col -bx > ccman.txt

git remote set-url origin git@github.com:mikaelkindborg/VimanaCode.git

https://www.nature.com/articles/s43587-021-00041-7
https://www.jpost.com/archaeology/oldest-woven-basket-in-the-world-found-in-israel-dates-back-10000-years-662183
https://medium.com/@sathishramyen/a-five-thousand-year-old-ancient-indian-vimana-found-in-afghanistan-cave-eight-american-soldiers-453253fa002b
https://www.pinterest.com/pin/585890232753390686/
https://www.extraordinarybeliefs.com/news4/navy-filmed-pyramid-ufos
https://www.youtube.com/watch?v=jlERSVSDl7Y
https://projectavalon.net/forum4/showthread.php?36575-Tiny-Houses&highlight=houseboat

https://stackoverflow.com/questions/3605196/implementing-a-direct-threaded-interpreter-in-a-functional-language-like-ocaml
http://cs603.cs.ua.edu/2003spring/
https://github.com/pliba
https://github.com/pliba/budd/tree/master/kamin
http://www.buildyourownlisp.com/chapter15_standard_library#minimalism
http://strlen.com/language-design-overview/

https://www.geeksforgeeks.org/socket-programming-cc/
https://www.thecrazyprogrammer.com/2017/06/socket-programming.html
https://www.codeproject.com/articles/586000/networking-and-socket-programming-tutorial-in-c

https://gcc.gnu.org/onlinedocs/gcc/Statement-Exprs.html
https://blog.robertelder.org/switch-statements-statement-expressions/
https://en.wikipedia.org/wiki/Duff's_device

https://gcc.gnu.org/onlinedocs/gcc/Statement-Exprs.html (gcc only)
https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/localtime.3.html
https://github.com/arduino/ArduinoCore-samd/blob/master/libraries/SDU/extras/SDUBoot/SDUBoot.ino
https://www.arduino.cc/en/Guide/MKRWiFi1010
https://hackaday.com/2021/03/20/arduino-serial-vs-serialusb/
https://www.arduino.cc/en/Reference/SDU
https://create.arduino.cc/projecthub/Arduino_Genuino/sd-sketch-update-534404
https://forum.arduino.cc/t/how-to-flash-arduino-program-through-micro-sd-card-without-using-arduino-ide/485349
https://mongoose-os.com

https://www.youtube.com/watch?v=MGivF9O8vn4
https://gitlab.com/nakst/essence
https://github.com/nakst/flip

http://arclanguage.org/forum

https://www.cprogramming.com/reference/preprocessor/ifdef.html
https://hownot2code.com/2016/12/05/do-while-0-in-macros/

http://wiki.laptop.org/go/Forth
xhttp://useless-factor.blogspot.com/2008/02/quick-intro-to-garbage-collection.html
https://www.erlang-solutions.com/blog/erlang-garbage-collector/
Factor talk: https://www.youtube.com/watch?v=f_0QlhYlS8g
https://concatenative.org/wiki/view/Factor/FAQ/Why?
https://stackoverflow.com/questions/9882326/memory-management-in-forth/9898471
https://stackoverflow.com/questions/7874342/what-is-the-difference-between-objective-c-automatic-reference-counting-and-garb
https://nim-lang.org/docs/gc.html
https://www.cs.utexas.edu/users/hunt/research/hash-cons/hash-cons-papers/BakerLinearLisp.pdf
https://cdiggins.github.io/blog/linear-logic-and-linear-lisp.html
http://tunes.org/~iepos/joy.html
https://palmstroem.blogspot.com/2012/05/lambda-calculus-for-absolute-dummies.html

https://andreasfertig.blog/2021/02/clang-and-gcc-on-macos-catalina-finding-the-include-paths/

https://stackoverflow.com/questions/840501/how-do-function-pointers-in-c-work
            
https://stackoverflow.com/questions/10950828/simulation-of-templates-in-c-for-a-queue-data-type
https://stackoverflow.com/questions/16522341/pseudo-generics-in-c

https://iafisher.com/blog/2020/06/type-safe-generics-in-c
http://arnold.uthar.net/index.php?n=Work.TemplatesC

https://tenbaht.github.io/sduino/api/migration/

https://en.cppreference.com/w/c/language/generic

https://overiq.com/c-programming-101/intro-to-c-programming/
 
https://www.cprogramming.com/gcc.html
https://www.programmingsimplified.com/c-program-examples

https://www.tutorialspoint.com/c_standard_library/setjmp_h.htm
https://www.tutorialspoint.com/c_standard_library/time_h.htm
https://www.tutorialspoint.com/cprogramming/c_structures.htm

https://man7.org/linux/man-pages/man3/exec.3.html
https://man7.org/linux/man-pages/man2/lstat.2.html

https://linuxhint.com/exec_linux_system_call_c/

https://suchprogramming.com/new-linux-process-c/

https://amphp.org

cc -E file.c


#include <unistd.h>      
int x = execl("./hello", "./hello", NULL);

//unsigned long long max_ull = -1;
//unsigned long max_ul = -1;
//printf ("Max ulonglong: %llu\n", max_ull);
//printf ("Max ulong    : %lu\n", max_ul);
//18446744073709551615
//18446744073709551615
//int x = execl("./hello", "./hello", NULL);
 

//printf("%c", *p);

//char* tokens = malloc(sizeof(Symbol) * 1000);
char* p = code;
//char* t = tokens;

char token[32];
char* ptoken;
char* p1 = NULL;
  
int interp_create_list(&$tokens)
{
  $list = [];
  
  while (TRUE):
    if (count($tokens) === 0):
      return $list;
    endif;
    
    $next = array_shift($tokens);
    
    if ($next === ")"):
      return $list;
    endif;
    
    if ($next === "("):
      $next = interp_create_list($tokens);
    endif;
    
    // Convert string to number.
    if (is_numeric($next)):
      $next = $next + 0;
    endif;
    
    array_push($list, $next);
  endwhile;
}

void play_with_list()
{
  List* list = Interp_ListCreate(10);
  
  Item item;
  
  strcpy(item.data.symbol, "Hello");
  item.type = 1;
  Interp_ListPush(list, item);
  
  item.data.number = 33.3;
  item.type = 2;
  Interp_ListPush(list, item);
  
  printf("Size of list: %i\n", list->length);
  
  item = Interp_ListGet(list, 0);
  printf("%s\n", item.data.symbol);
  
  item = Interp_ListGet(list, 1);
  printf("%f\n", item.data.number);
}
